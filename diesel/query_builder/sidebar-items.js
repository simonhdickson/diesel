initSidebarItems({"fn":[["debug_query","Takes a query `QueryFragment` expression as an argument and returns a type that implements `fmt::Display` and `fmt::Debug` to show the query."]],"mod":[["bind_collector",""],["insert_statement",""],["where_clause",""]],"struct":[["AstPass","The primary type used when walking a Diesel AST during query execution."],["DebugQuery","A struct that implements `fmt::Display` and `fmt::Debug` to show the SQL representation of a query."],["DeleteStatement",""],["IncompleteInsertStatement","The structure returned by `insert_into`."],["IncompleteUpdateStatement","The type returned by `update`. The only thing you can do with this type is call `set` on it."],["SqlQuery","The return value of `sql_query`."],["UpdateStatement","Represents a complete `UPDATE` statement."]],"trait":[["AsChangeset","Types which can be passed to `update.set`."],["AsQuery","Types that can be converted into a complete, typed SQL query."],["Changeset","Apps should not need to concern themselves with this trait."],["IntoUpdateTarget","A type which can be passed to `update` or `delete`."],["Query","A complete SQL query with a return type."],["QueryBuilder","Apps should not need to concern themselves with this trait."],["QueryFragment","An untyped fragment of SQL."],["QueryId",""]],"type":[["BuildQueryResult","A specialized Result type used with the query builder."]]});